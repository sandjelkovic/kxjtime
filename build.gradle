buildscript {
    ext.kotlin_version = '1.2.41'
    ext.githost_url = "https://github.com/sandjelkovic/${rootProject.name}"
    ext.dokka_version = '0.9.9'
    ext.dokka_sourceMapping = 'tree/master'

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
    }
}

group 'com.sandjelkovic'
version '0.0.1-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    testRuntime("org.junit.platform:junit-platform-launcher:1.2.0")
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
dokka {
    outputFormat = 'html'
    outputDirectory = "${project.buildDir}/dokkaHtml"

    linkMapping {
        dir = rootProject.projectDir.absolutePath
        url = "$githost_url/${dokka_sourceMapping}"
        suffix = "#L"
    }

}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = "${project.buildDir}/dokkaJavadoc"

    linkMapping {
        dir = rootProject.projectDir.absolutePath
        url = "$githost_url/${dokka_sourceMapping}"
        suffix = "#L"
    }
}

def sourceJar = task('sourceJar', type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

def javadocJar = task('javadocJar', type: Jar, dependsOn: dokka) {
    from dokkaJavadoc.outputDirectory
    classifier = 'javadoc'
}
